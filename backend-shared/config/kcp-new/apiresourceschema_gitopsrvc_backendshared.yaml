# This file is generated from CRDs by ./utilities/generate-kcp-api-backend-shared.sh script.
# Please do not modify!

apiVersion: apis.kcp.dev/v1alpha1
kind: APIResourceSchema
metadata:
  creationTimestamp: null
  name: v202208100611.gitopsdeploymentmanagedenvironments.managed-gitops.redhat.com
spec:
  group: managed-gitops.redhat.com
  names:
    kind: GitOpsDeploymentManagedEnvironment
    listKind: GitOpsDeploymentManagedEnvironmentList
    plural: gitopsdeploymentmanagedenvironments
    singular: gitopsdeploymentmanagedenvironment
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      description: GitOpsDeploymentManagedEnvironment is the Schema for the gitopsdeploymentmanagedenvironments
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: GitOpsDeploymentManagedEnvironmentSpec defines the desired
            state of GitOpsDeploymentManagedEnvironment
          properties:
            apiURL:
              type: string
            credentialsSecret:
              type: string
          required:
          - apiURL
          - credentialsSecret
          type: object
        status:
          description: GitOpsDeploymentManagedEnvironmentStatus defines the observed
            state of GitOpsDeploymentManagedEnvironment
          type: object
      type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apis.kcp.dev/v1alpha1
kind: APIResourceSchema
metadata:
  creationTimestamp: null
  name: v202208100611.gitopsdeploymentrepositorycredentials.managed-gitops.redhat.com
spec:
  group: managed-gitops.redhat.com
  names:
    kind: GitOpsDeploymentRepositoryCredential
    listKind: GitOpsDeploymentRepositoryCredentialList
    plural: gitopsdeploymentrepositorycredentials
    singular: gitopsdeploymentrepositorycredential
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      description: GitOpsDeploymentRepositoryCredential is the Schema for the gitopsdeploymentrepositorycredentials
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: GitOpsDeploymentRepositoryCredentialSpec defines the desired
            state of GitOpsDeploymentRepositoryCredential
          properties:
            repository:
              description: Repository (HTTPS url, or SSH string) for accessing the
                Git repo Required field As of this writing (Mar 2022), we only support
                HTTPS URL
              type: string
            secret:
              description: Reference to a K8s Secret in the namespace that contains
                repository credentials (Git username/password, as of this writing)
                Required field
              type: string
          required:
          - repository
          - secret
          type: object
        status:
          description: GitOpsDeploymentRepositoryCredentialStatus defines the observed
            state of GitOpsDeploymentRepositoryCredential
          type: object
      type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apis.kcp.dev/v1alpha1
kind: APIResourceSchema
metadata:
  creationTimestamp: null
  name: v202208100611.gitopsdeployments.managed-gitops.redhat.com
spec:
  group: managed-gitops.redhat.com
  names:
    kind: GitOpsDeployment
    listKind: GitOpsDeploymentList
    plural: gitopsdeployments
    singular: gitopsdeployment
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      description: GitOpsDeployment is the Schema for the gitopsdeployments API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: GitOpsDeploymentSpec defines the desired state of GitOpsDeployment
          properties:
            destination:
              description: 'Destination is a reference to a target namespace/cluster
                to deploy to. This field may be empty: if it is empty, it is assumed
                that the destination is the same namespace as the GitOpsDeployment
                CR.'
              properties:
                environment:
                  type: string
                namespace:
                  description: The namespace will only be set for namespace-scoped
                    resources that have not set a value for .metadata.namespace
                  type: string
              type: object
            source:
              description: ApplicationSource contains all required information about
                the source of an application
              properties:
                path:
                  description: Path is a directory path within the Git repository,
                    and is only valid for applications sourced from Git.
                  type: string
                repoURL:
                  description: RepoURL is the URL to the repository (Git or Helm)
                    that contains the application manifests
                  type: string
                targetRevision:
                  description: TargetRevision defines the revision of the source to
                    sync the application to. In case of Git, this can be commit, tag,
                    or branch. If omitted, will equal to HEAD. In case of Helm, this
                    is a semver tag for the Chart's version.
                  type: string
              required:
              - repoURL
              type: object
            type:
              description: "Two possible values: - Automated: whenever a new commit
                occurs in the GitOps repository, or the Argo CD Application is out
                of sync, Argo CD should be told to (re)synchronize. - Manual: Argo
                CD should never be told to resynchronize. Instead, synchronize operations
                will be triggered via GitOpsDeploymentSyncRun operations only. - See
                `GitOpsDeploymentSpecType*` \n Note: This is somewhat of a placeholder
                for more advanced logic that can be implemented in the future. For
                an example of this type of logic, see the 'syncPolicy' field of Argo
                CD Application."
              type: string
          required:
          - source
          - type
          type: object
        status:
          description: GitOpsDeploymentStatus defines the observed state of GitOpsDeployment
          properties:
            conditions:
              items:
                description: GitOpsDeploymentCondition contains details about an GitOpsDeployment
                  condition, which is usually an error or warning
                properties:
                  lastProbeTime:
                    description: LastProbeTime is the last time the condition was
                      observed.
                    format: date-time
                    type: string
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: Message contains human-readable message indicating
                      details about the last condition.
                    type: string
                  reason:
                    description: Reason is a unique, one-word, CamelCase reason for
                      the condition's last transition.
                    type: string
                  status:
                    description: Status is the status of the condition.
                    type: string
                  type:
                    description: Type is a GitOpsDeployment condition type
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            health:
              description: Health contains information about the application's current
                health status
              properties:
                message:
                  description: Message is a human-readable informational message describing
                    the health status
                  type: string
                status:
                  description: Status holds the status code of the application or
                    resource
                  type: string
              type: object
            resources:
              description: List of Resource created by a deployment
              items:
                description: ResourceStatus holds the current sync and health status
                  of a resource
                properties:
                  group:
                    type: string
                  health:
                    description: HealthStatus contains information about the currently
                      observed health state of an application or resource
                    properties:
                      message:
                        description: Message is a human-readable informational message
                          describing the health status
                        type: string
                      status:
                        description: Status holds the status code of the application
                          or resource
                        type: string
                    type: object
                  kind:
                    type: string
                  name:
                    type: string
                  namespace:
                    type: string
                  status:
                    description: SyncStatusCode is a type which represents possible
                      comparison results
                    type: string
                  version:
                    type: string
                type: object
              type: array
            sync:
              description: SyncStatus contains information about the currently observed
                live and desired states of an application
              properties:
                revision:
                  description: Revision contains information about the revision the
                    comparison has been performed to
                  type: string
                status:
                  description: Status is the sync state of the comparison
                  type: string
              required:
              - status
              type: object
          type: object
      type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apis.kcp.dev/v1alpha1
kind: APIResourceSchema
metadata:
  creationTimestamp: null
  name: v202208100611.gitopsdeploymentsyncruns.managed-gitops.redhat.com
spec:
  group: managed-gitops.redhat.com
  names:
    kind: GitOpsDeploymentSyncRun
    listKind: GitOpsDeploymentSyncRunList
    plural: gitopsdeploymentsyncruns
    singular: gitopsdeploymentsyncrun
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      description: GitOpsDeploymentSyncRun is the Schema for the gitopsdeploymentsyncruns
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: GitOpsDeploymentSyncRunSpec defines the desired state of GitOpsDeploymentSyncRun
          properties:
            gitopsDeploymentName:
              type: string
            revisionID:
              type: string
          required:
          - gitopsDeploymentName
          type: object
        status:
          description: GitOpsDeploymentSyncRunStatus defines the observed state of
            GitOpsDeploymentSyncRun
          properties:
            conditions:
              items:
                description: GitOpsDeploymentCondition contains details about an applicationset
                  condition, which is usally an error or warning
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the time the condition was
                      last observed
                    format: date-time
                    type: string
                  message:
                    description: Message contains human-readable message indicating
                      details about condition
                    type: string
                  reason:
                    description: Single word camelcase representing the reason for
                      the status eg ErrorOccurred
                    type: string
                  status:
                    description: True/False/Unknown
                    type: string
                  type:
                    description: Type is an applicationset condition type
                    type: string
                required:
                - message
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apis.kcp.dev/v1alpha1
kind: APIResourceSchema
metadata:
  creationTimestamp: null
  name: v202208100611.operations.managed-gitops.redhat.com
spec:
  group: managed-gitops.redhat.com
  names:
    kind: Operation
    listKind: OperationList
    plural: operations
    singular: operation
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      description: Operation is the Schema for the operations API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: OperationSpec defines the desired state of Operation
          properties:
            operationID:
              type: string
          type: object
        status:
          description: OperationStatus defines the observed state of Operation
          type: object
      type: object
    served: true
    storage: true
    subresources:
      status: {}

---
